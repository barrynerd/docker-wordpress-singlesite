version: '3.8'

services:
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
    image: wordpress-custom-bcc:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${WORDPRESS_PORT:-8000}:443
    volumes:
      - wordpress_content_data:/var/www/html/wp-content
      - ~/certs:/etc/apache2/ssl:ro

    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX:-wp_}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG:-false}
      SSL_CERT_FILE: ${SSL_CERT_FILE:-/etc/apache2/ssl/wordpress.crt}
      SSL_KEY_FILE: ${SSL_KEY_FILE:-/etc/apache2/ssl/wordpress.key}

    # CRITICAL CHANGE: Call the original docker-entrypoint.sh
    # It will copy files to /var/www/html if needed, then run your scripts,
    # and finally execute apache2-foreground.
    command: >
      bash -c "
        # Ensure WordPress files are copied and permissions are set by the entrypoint
        # Then run your custom scripts
        /usr/local/bin/install-packages.sh && \
        /usr/local/bin/enable-ssl.sh && \
        # Finally, execute the original entrypoint with apache2-foreground
        exec docker-entrypoint.sh apache2-foreground
      "

    healthcheck:
      test: ["CMD-SHELL", "curl -fksS https://localhost/ || curl -fksS http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: mariadb:lts
    restart: always
    environment:
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  wpcli:
    image: wordpress:cli
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - wordpress_content_data:/var/www/html/wp-content
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX:-wp_}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG:-false}
    entrypoint: wp

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-${COMPOSE_PROJECT_NAME}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PMA_PORT:-8080}:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_USER: ${WORDPRESS_DB_USER}
      PMA_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    networks:
      - wordpress_network

networks:
  wordpress_network:
    driver: bridge

volumes:
  db_data:
  wordpress_content_data:
